// Definições básicas do Prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelo de Usuário
model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  projects  Project[]
}

// Modelo de Projeto
model Project {
  id              Int      @id @default(autoincrement())
  title           String
  description     String
  pdfUrl          String
  cidade          String
  tipoProjeto     String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  userId          Int
  user            User     @relation(fields: [userId], references: [id])
}

// Modelo de Parâmetros Urbanísticos
model UrbanisticParameter {
  id                         Int      @id @default(autoincrement())
  cidade                     String
  zona                       String
  tipoProjeto                String
  usoPermitido               String
  taxaOcupacaoMaxima         Float
  coeficienteAproveitamentoMaximo Float
  recuoFrontalMinimo         Float
  recuoLateralMinimo         Float
  recuoFundoMinimo           Float
  alturaMaxima               Int
  numeroMaximoPavimentos     Int
  permeabilidadeMinima       Float
  observacoes                String?   // Campo opcional
}

// Modelo de Normas de Representação Gráfica
model RepresentationRule {
  id                    Int      @id @default(autoincrement())
  cidade                String
  tipoProjeto           String
  itemObrigatorio       String
  descricaoExigencia    String
  formatoCarimbo        String?
  obrigatoriedadeCotas  Boolean
  obrigatoriedadeEscala Boolean
  observacoes           String?  // Campo opcional
}


model GraphicStandard {
  id            Int      @id @default(autoincrement())
  cidade        String
  tipoProjeto   String
  nomeParametro String
  valorEsperado String
  fonte         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

